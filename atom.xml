<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>etwinnie&#39;s blog</title>
  
  
  <link href="https://etwinnie.github.io/atom.xml" rel="self"/>
  
  <link href="https://etwinnie.github.io/"/>
  <updated>2020-11-27T05:58:17.300Z</updated>
  <id>https://etwinnie.github.io/</id>
  
  <author>
    <name>etwinnie</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hexo博客-音视频插入</title>
    <link href="https://etwinnie.github.io/2020/11/27/Hexo%E5%8D%9A%E5%AE%A2-%E9%9F%B3%E8%A7%86%E9%A2%91%E6%8F%92%E5%85%A5/"/>
    <id>https://etwinnie.github.io/2020/11/27/Hexo%E5%8D%9A%E5%AE%A2-%E9%9F%B3%E8%A7%86%E9%A2%91%E6%8F%92%E5%85%A5/</id>
    <published>2020-11-27T05:35:30.000Z</published>
    <updated>2020-11-27T05:58:17.300Z</updated>
    
    <content type="html"><![CDATA[<p>测试在hexo-Next主题博客中插入音视频。</p><p>测试1：插入网易云音乐音频</p><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=544247584&auto=1&height=66"></iframe><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=298 height=52 src="//music.163.com/outchain/player?type=2&id=544247584&auto=1&height=32"></iframe><p>测试2：插入B站视频</p><iframe src="//player.bilibili.com/player.html?aid=79959820&bvid=BV1zJ411x7k8&cid=136846978&page=4" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe><p>测试3：使用Audio标签 + 网盘进行上传<br><audio src="http://box.yungu.org/f/21bfdbeb3dea48f4a921/?dl=1" controls="" preload="metadata"></audio></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;测试在hexo-Next主题博客中插入音视频。&lt;/p&gt;
&lt;p&gt;测试1：插入网易云音乐音频&lt;/p&gt;
&lt;iframe frameborder=&quot;no&quot; border=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; width=330 height=86</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Next主题配置踩坑</title>
    <link href="https://etwinnie.github.io/2020/10/12/hexo/Next%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE%E8%B8%A9%E5%9D%91/"/>
    <id>https://etwinnie.github.io/2020/10/12/hexo/Next%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE%E8%B8%A9%E5%9D%91/</id>
    <published>2020-10-12T09:09:13.000Z</published>
    <updated>2020-10-12T14:48:59.354Z</updated>
    
    <content type="html"><![CDATA[<h2 id="git-push到github后，访问主页为空白"><a href="#git-push到github后，访问主页为空白" class="headerlink" title="git push到github后，访问主页为空白"></a>git push到github后，访问主页为空白</h2><p><strong>问题描述：</strong></p><ul><li>git push到github后，访问主页为空白</li><li>Travis CI自动部署的log中提示WARN No layout</li></ul><p><strong>原因：</strong><br>因为这个问题，清空了一遍github和本地仓库，折腾了大半天。最后发现是因为next主题也是一个repo，下载的next主题中有.git文件，导致上传git的时候被忽略了。</p><a id="more"></a><p><img src="https://pic1.zhimg.com/v2-ce360b5ee451fcd9ad24d6b10935dde8_b.jpg"><br><strong>解决方案：</strong></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">rm</span> -rf themes/主题文件名<span class="token function">git</span> <span class="token function">add</span> .git commit -m <span class="token string">"fix"</span><span class="token function">git</span> clone -b master 主题git地址 themes/主题文件名rm -rf themes/主题文件名/.git<span class="token function">git</span> <span class="token function">add</span> .git commit -m <span class="token string">"fix"</span><span class="token function">git</span> push<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://i.loli.net/2020/10/12/O5zsnLMTBbmAC4l.png" alt="image.png"></p><blockquote><p>参考链接：<br><a href="https://www.cnblogs.com/reboot777/p/11164193.html">文件夹因存在.git而无法提交到git的解决办法</a></p></blockquote><h2 id="集成Valine评论问题"><a href="#集成Valine评论问题" class="headerlink" title="集成Valine评论问题"></a>集成Valine评论问题</h2><p>Next官方文档相对来说已经比较详细了，此处记录一下遇到过的坑。</p><blockquote><p><a href="https://theme-next.js.org/docs/third-party-services/comments.html#Valine">Next集成Valine评论系统</a></p></blockquote><h3 id="加载成功评论框，但无法提交"><a href="#加载成功评论框，但无法提交" class="headerlink" title="加载成功评论框，但无法提交"></a>加载成功评论框，但无法提交</h3><p><img src="https://i.loli.net/2020/10/12/y6eYsJk5MEx3fg9.png" alt="image.png"><br><img src="https://i.loli.net/2020/10/12/1mcGCaKFXI93lQf.png" alt="image.png"><br><strong>解决方案：</strong><br>修改主题中的配置文件 _config.yml中Valine配置，增加url属性。</p><p><img src="https://i.loli.net/2020/10/12/IEOtmFDQ2ReKo65.png" alt="image.png"><br><img src="https://i.loli.net/2020/10/12/mNwuAjlSnvULGf4.png" alt="image.png"></p><h2 id="配置Gitalk"><a href="#配置Gitalk" class="headerlink" title="配置Gitalk"></a>配置Gitalk</h2><ol><li>参考官方文档进行配置<a href="https://theme-next.js.org/docs/third-party-services/comments.html#Gitalk">Gitalk - Next主题配置</a></li><li>Homepage URL与Authorization callback URL均为https不是http</li><li>如果github.io绑定了域名的话，Authorization callback URL为自己申请的域名。</li><li>要在线上环境才可以测试成功</li><li>测试时，第一次需要登录一遍github授权后，再刷新后即可正常使用了。</li><li>用来存储issue的repo需要在repo设置中打开issue功能。</li></ol><h2 id="Next主题配置进阶教程"><a href="#Next主题配置进阶教程" class="headerlink" title="Next主题配置进阶教程"></a>Next主题配置进阶教程</h2><blockquote><p><a href="https://blog.csdn.net/qq_41518277/article/details/101766036#_165">NexT主题进阶</a></p></blockquote>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;git-push到github后，访问主页为空白&quot;&gt;&lt;a href=&quot;#git-push到github后，访问主页为空白&quot; class=&quot;headerlink&quot; title=&quot;git push到github后，访问主页为空白&quot;&gt;&lt;/a&gt;git push到github后，访问主页为空白&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;问题描述：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;git push到github后，访问主页为空白&lt;/li&gt;
&lt;li&gt;Travis CI自动部署的log中提示WARN No layout&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;原因：&lt;/strong&gt;&lt;br&gt;因为这个问题，清空了一遍github和本地仓库，折腾了大半天。最后发现是因为next主题也是一个repo，下载的next主题中有.git文件，导致上传git的时候被忽略了。&lt;/p&gt;</summary>
    
    
    
    <category term="hexo" scheme="https://etwinnie.github.io/categories/hexo/"/>
    
    
    <category term="hexo" scheme="https://etwinnie.github.io/tags/hexo/"/>
    
    <category term="Next主题" scheme="https://etwinnie.github.io/tags/Next%E4%B8%BB%E9%A2%98/"/>
    
    <category term="Git" scheme="https://etwinnie.github.io/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>hexo搭建博客(三) - 新建文档Markdown</title>
    <link href="https://etwinnie.github.io/2020/10/09/hexo/%E6%96%B0%E5%BB%BA%E6%96%87%E6%A1%A3Markdown/"/>
    <id>https://etwinnie.github.io/2020/10/09/hexo/%E6%96%B0%E5%BB%BA%E6%96%87%E6%A1%A3Markdown/</id>
    <published>2020-10-09T13:52:52.000Z</published>
    <updated>2020-10-13T08:50:53.237Z</updated>
    
    <content type="html"><![CDATA[<h1 id="新建文章的方法"><a href="#新建文章的方法" class="headerlink" title="新建文章的方法"></a>新建文章的方法</h1><p>(1)通过命令新建</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new <span class="token string">'title'</span> <span class="token comment"># 新建文章</span>$ hexo new draft <span class="token string">'draftname'</span> <span class="token comment">#新建草稿</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>（2）编辑Markdown文档<br>执行上述命令后，会在仓库文件夹下的/source/_posts中找到新增的Markdown文档。</p><a id="more"></a><p>（3）生成，push</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo g$ hexo s$ <span class="token function">git</span> <span class="token function">add</span> -A$ <span class="token function">git</span> commit -m <span class="token string">'说明'</span>$ <span class="token function">git</span> push origin master<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Markdown中增加代码块等其他标签块"><a href="#Markdown中增加代码块等其他标签块" class="headerlink" title="Markdown中增加代码块等其他标签块"></a>Markdown中增加代码块等其他标签块</h2><p>参考链接：<a href="https://hexo.io/zh-cn/docs/tag-plugins">Hexo 标签插件（Tag Plugins）</a></p><h1 id="Markdowm添加图片-图床功能"><a href="#Markdowm添加图片-图床功能" class="headerlink" title="Markdowm添加图片 - 图床功能"></a>Markdowm添加图片 - 图床功能</h1><ul><li>sm.ms：免费、稳定，未来的稳定性不可控。</li><li>微博图床：国内、速度不错，有点麻烦</li><li>七牛云：国外，稳定，要收费</li><li>imgur：老牌稳定图床，国外服务器，慢</li><li>腾讯云、阿里云</li><li>图床工具：Picgo</li></ul>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;新建文章的方法&quot;&gt;&lt;a href=&quot;#新建文章的方法&quot; class=&quot;headerlink&quot; title=&quot;新建文章的方法&quot;&gt;&lt;/a&gt;新建文章的方法&lt;/h1&gt;&lt;p&gt;(1)通过命令新建&lt;/p&gt;
&lt;pre class=&quot;line-numbers language-bash&quot; data-language=&quot;bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;$ hexo new &lt;span class=&quot;token string&quot;&gt;&#39;title&#39;&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;# 新建文章&lt;/span&gt;
$ hexo new draft &lt;span class=&quot;token string&quot;&gt;&#39;draftname&#39;&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;#新建草稿&lt;/span&gt;&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;（2）编辑Markdown文档&lt;br&gt;执行上述命令后，会在仓库文件夹下的/source/_posts中找到新增的Markdown文档。&lt;/p&gt;</summary>
    
    
    
    <category term="hexo" scheme="https://etwinnie.github.io/categories/hexo/"/>
    
    
    <category term="hexo" scheme="https://etwinnie.github.io/tags/hexo/"/>
    
    <category term="blog" scheme="https://etwinnie.github.io/tags/blog/"/>
    
    <category term="markdown" scheme="https://etwinnie.github.io/tags/markdown/"/>
    
  </entry>
  
  <entry>
    <title>hexo搭建博客(二) - 部署到github</title>
    <link href="https://etwinnie.github.io/2020/10/09/hexo/hexo%E9%83%A8%E7%BD%B2%E5%88%B0git/"/>
    <id>https://etwinnie.github.io/2020/10/09/hexo/hexo%E9%83%A8%E7%BD%B2%E5%88%B0git/</id>
    <published>2020-10-09T08:09:18.000Z</published>
    <updated>2020-10-14T00:09:23.654Z</updated>
    
    <content type="html"><![CDATA[<h1 id="使用Travis-CI自动部署Hexo"><a href="#使用Travis-CI自动部署Hexo" class="headerlink" title="使用Travis CI自动部署Hexo"></a>使用Travis CI自动部署Hexo</h1><p>参考链接：<br><a href="https://hexo.io/zh-cn/docs/github-pages">hexo部署到git</a></p><p>我们将会使用 Travis CI 将 Hexo 博客部署到 GitHub Pages 上。Travis CI 对于开源 repository 是免费的，但是这意味着你的站点文件将会是公开的。</p><a id="more"></a><ol><li>新建一个 repository。如果你希望你的站点能通过 &lt;你的 GitHub 用户名&gt;.github.io 域名访问，你的 repository 应该直接命名为 &lt;你的 GitHub 用户名&gt;.github.io。</li><li>将你的 Hexo 站点文件夹推送到 repository 中。默认情况下不应该 public 目录将不会被推送到 repository 中，你应该检查 .gitignore 文件中是否包含 public 一行，如果没有请加上。</li><li>将 Travis CI 添加到你的 GitHub 账户中。</li><li>前往 GitHub 的 Applications settings，配置 Travis CI 权限，使其能够访问你的 repository。</li><li>你应该会被重定向到 Travis CI 的页面。如果没有，请 手动前往。</li><li>在浏览器新建一个标签页，前往 GitHub 新建 Personal Access Token，只勾选 repo 的权限并生成一个新的 Token。Token 生成后请复制并保存好。</li><li>回到 Travis CI，前往你的 repository 的设置页面，在 Environment Variables 下新建一个环境变量，Name 为 GH_TOKEN，Value 为刚才你在 GitHub 生成的 Token。确保 DISPLAY VALUE IN BUILD LOG 保持 不被勾选 避免你的 Token 泄漏。点击 Add 保存。</li><li>在你的 Hexo 站点文件夹中新建一个 .travis.yml 文件：</li></ol><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">sudo</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span class="token key atrule">language</span><span class="token punctuation">:</span> node_js<span class="token key atrule">node_js</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token number">10</span> <span class="token comment"># use nodejs v10 LTS</span><span class="token key atrule">cache</span><span class="token punctuation">:</span> npm<span class="token key atrule">branches</span><span class="token punctuation">:</span>  <span class="token key atrule">only</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> master <span class="token comment"># build master branch only</span><span class="token key atrule">script</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> hexo generate <span class="token comment"># generate static files</span><span class="token key atrule">deploy</span><span class="token punctuation">:</span>  <span class="token key atrule">provider</span><span class="token punctuation">:</span> pages  <span class="token key atrule">skip-cleanup</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">github-token</span><span class="token punctuation">:</span> $GH_TOKEN  <span class="token key atrule">keep-history</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">on</span><span class="token punctuation">:</span>    <span class="token key atrule">branch</span><span class="token punctuation">:</span> master  <span class="token key atrule">local-dir</span><span class="token punctuation">:</span> public<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="9"><li>将 .travis.yml 推送到 repository 中。Travis CI 应该会自动开始运行，并将生成的文件推送到同一 repository 下的 gh-pages 分支下</li><li>在 GitHub 中前往你的 repository 的设置页面，修改 GitHub Pages 的部署分支为 gh-pages。</li><li>前往 https://&lt;你的 GitHub 用户名&gt;.github.io 查看你的站点是否可以访问。这可能需要一些时间。</li></ol><h1 id="将本地仓库推送到github-io"><a href="#将本地仓库推送到github-io" class="headerlink" title="将本地仓库推送到github.io"></a>将本地仓库推送到github.io</h1><h2 id="初始化本地仓库"><a href="#初始化本地仓库" class="headerlink" title="初始化本地仓库"></a>初始化本地仓库</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token builtin class-name">cd</span> <span class="token operator">&lt;</span>定位到本地站点文件夹<span class="token operator">></span>     <span class="token comment">#定位到本地文件夹</span>$ <span class="token builtin class-name">pwd</span>                     <span class="token comment">#查看当前文件夹位置</span>$ <span class="token function">git</span> init        <span class="token comment">#初始化，将文件夹变成Git可管理的仓库</span>$ <span class="token function">git</span> <span class="token function">add</span> <span class="token builtin class-name">.</span>       <span class="token comment">#将所有文件提交到暂存区，由于是第一次提交，需要将所有文件都进行提交，如果一个一个的提交太麻烦，通过. 命令可以将所有文件都进行提交。</span>$ <span class="token function">git</span> commit -m <span class="token string">'the initial edition'</span> <span class="token comment">#提交到版本库</span>$ <span class="token function">git</span> remote <span class="token function">add</span> origin https://github.com/etwinnie/etwinnie.github.io.git <span class="token comment">#将本地仓库与Github仓库关联</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>Github仓库地址，在即为刚刚新建的Github仓库地址，可在此处找到</p><p><img src="https://i.loli.net/2020/10/10/CjdOv7ZBeFEtzgr.png" alt="image.png"></p><h2 id="github推送"><a href="#github推送" class="headerlink" title="github推送"></a>github推送</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">git</span> pull --rebase origin master <span class="token comment"># 第一次推送，要与云端仓库合并</span>$ <span class="token function">git</span> push -u origin master <span class="token comment">#进行推送，-u指将master分支全部推送</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#定期维护</span>$ <span class="token function">git</span> <span class="token function">add</span> -A               <span class="token comment">#将文件的修改上传到暂存区</span>$ <span class="token function">git</span> commit -m <span class="token string">'说明'</span>      <span class="token comment">#提交到本地仓库</span>$ <span class="token function">git</span> push origin master   <span class="token comment">#推送到GitHub网站上</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="可能出现的问题"><a href="#可能出现的问题" class="headerlink" title="可能出现的问题"></a>可能出现的问题</h3><h4 id="源引用表达式-master-没有匹配-gt"><a href="#源引用表达式-master-没有匹配-gt" class="headerlink" title="源引用表达式 master 没有匹配&gt;"></a>源引用表达式 master 没有匹配&gt;</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">git</span> pull origin master    <span class="token comment">#源引用表达式 master 没有匹配</span>$ <span class="token function">git</span> push --set-upstream origin master    <span class="token comment">#当前分支 master 没有对应的上游分支</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="https://cdn.nlark.com/yuque/0/2020/png/268532/1602158629415-5ed75d91-0d7c-443b-a1e5-558a86e8e6ed.png" alt="image.png"></p><h4 id="有些文件没有被提交到github"><a href="#有些文件没有被提交到github" class="headerlink" title="有些文件没有被提交到github"></a>有些文件没有被提交到github</h4><p>查看一下本地仓库的.gitignore文件中，是否设置对应被忽略的文件夹。<br>public文件夹一般情况下不会同步上传到github，它是生成的html静态文件。</p><h4 id="完成本地仓库推送后报错"><a href="#完成本地仓库推送后报错" class="headerlink" title="完成本地仓库推送后报错 -"></a>完成本地仓库推送后报错 -</h4><p><img src="https://i.loli.net/2020/10/09/3dOR6leFY2GEzTy.png" alt="image.png"></p><blockquote><p>参考链接：<a href="https://blog.csdn.net/LSH_Blog/article/details/105208743">hexo部署记录及采坑经验</a></p></blockquote><p><strong>1. 邮箱提示：Page build failure</strong><br>hexo自带的主题 landscape 的 REDEME.md 文件里面有错误的标签，于是直接删除掉了这个 README 文件。</p><p><strong>2. 删除后邮箱提示：Page build warning</strong><br>提示说jekyll 主题不被github pages支持。可能是在git push是忽略了.deploy_git文件，该文件是被linux系统隐藏的。解决方案，修改项目的_config.yml配置，将.nojekyll添加在inclde中。<br><img src="https://i.loli.net/2020/10/09/UVWHZmKzXJtBk6v.png" alt="image.png"></p><p><strong>3. 访问用户名.github.io不显示博客页面（问题一）</strong><br>（1）添加gh-pages分支<br>master分支存储代码，gh-pages分支用来存放hexo g出来的public文件夹。Travis CI即自动化部署master分支中的代码，将其生成的public文件夹部署到gh-pages分支中。</p><blockquote><p>参考链接：<a href="https://zhuanlan.zhihu.com/p/69592043">一文教你使用GitHub Pages部署静态网页</a></p></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 列出所有本地分支和远程分支，仓库默认在 master 分支</span>$ <span class="token function">git</span> branch -a<span class="token comment"># 新建并切换到 gh-pages 分支</span>$ <span class="token function">git</span> checkout -b gh-pages<span class="token comment"># 显示有变更的文件</span>$ <span class="token function">git</span> status$ <span class="token function">git</span> <span class="token function">add</span> <span class="token builtin class-name">.</span><span class="token comment"># 提交暂存区到仓库区，并添加代码提交信息</span>$ <span class="token function">git</span> commit -m <span class="token string">'first commit'</span><span class="token comment"># 添加远程仓库</span>$ <span class="token function">git</span> remote <span class="token function">add</span> origin git@github.com:DesertsX/yulequan-relations-graph.git<span class="token comment"># 把本地的 gh-pages 分支推送到 origin 服务器上</span>$ <span class="token function">git</span> push origin gh-pages<span class="token comment"># 切换分支命令</span>$ <span class="token function">git</span> checkout <span class="token operator">&lt;</span>想到切换的分支<span class="token operator">></span><span class="token comment"># 删除分支</span>$ <span class="token function">git</span> branch -d <span class="token operator">&lt;</span>想删除的分支名称<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>注意：.travis.yml文件中，Travis CI默认部署的就是public文件夹了。<br><img src="https://i.loli.net/2020/10/09/nbaT2pUdDY8XjwH.png" alt="image.png"></p><p>（2）在仓库setting中，修改仓库的默认Github pages显示页面。<br><img src="https://i.loli.net/2020/10/09/Qt6JZvpImjM8seW.png" alt="image.png"></p><p><strong>4. 访问用户名.github.io不显示博客页面（问题一）</strong><br>问题描述：更改主题为Next后，git push页面为空白，Travis CI提示 WARN No layout<br><img src="https://pic1.zhimg.com/v2-ce360b5ee451fcd9ad24d6b10935dde8_b.jpg"></p><p>原因：主题文件夹中有.git文件，导致上传git的时候被忽略了。<br>解决办法：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">rm</span> -rf themes/主题文件名$ <span class="token function">git</span> <span class="token function">add</span> .git commit -m <span class="token string">"fix"</span>$ <span class="token function">git</span> clone -b master 主题$ git地址 themes/主题文件名rm -rf themes/主题文件名/.git$ <span class="token function">git</span> <span class="token function">add</span> .git commit -m <span class="token string">"fix"</span>$ <span class="token function">git</span> push<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://i.loli.net/2020/10/12/O5zsnLMTBbmAC4l.png" alt="image.png"></p><blockquote><p>参考链接：<a href="https://www.cnblogs.com/reboot777/p/11164193.html">文件夹因存在.git而无法提交到git的解决办法</a></p></blockquote><p>因为这个小问题，完全清空github和本地仓库重新设置了一遍~ </p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;使用Travis-CI自动部署Hexo&quot;&gt;&lt;a href=&quot;#使用Travis-CI自动部署Hexo&quot; class=&quot;headerlink&quot; title=&quot;使用Travis CI自动部署Hexo&quot;&gt;&lt;/a&gt;使用Travis CI自动部署Hexo&lt;/h1&gt;&lt;p&gt;参考链接：&lt;br&gt;&lt;a href=&quot;https://hexo.io/zh-cn/docs/github-pages&quot;&gt;hexo部署到git&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;我们将会使用 Travis CI 将 Hexo 博客部署到 GitHub Pages 上。Travis CI 对于开源 repository 是免费的，但是这意味着你的站点文件将会是公开的。&lt;/p&gt;</summary>
    
    
    
    <category term="hexo" scheme="https://etwinnie.github.io/categories/hexo/"/>
    
    
    <category term="hexo" scheme="https://etwinnie.github.io/tags/hexo/"/>
    
    <category term="blog" scheme="https://etwinnie.github.io/tags/blog/"/>
    
    <category term="环境搭建" scheme="https://etwinnie.github.io/tags/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    
    <category term="git" scheme="https://etwinnie.github.io/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>hexo搭建博客(一) - 环境搭建</title>
    <link href="https://etwinnie.github.io/2020/10/09/hexo/hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"/>
    <id>https://etwinnie.github.io/2020/10/09/hexo/hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/</id>
    <published>2020-10-09T04:43:35.000Z</published>
    <updated>2020-10-13T08:49:01.280Z</updated>
    
    <content type="html"><![CDATA[<h1 id="本地环境搭建"><a href="#本地环境搭建" class="headerlink" title="本地环境搭建"></a>本地环境搭建</h1><p>参考链接：<br><a href="https://hexo.io/zh-cn/docs/">Hexo官方文档</a></p><h2 id="安装前提"><a href="#安装前提" class="headerlink" title="安装前提"></a>安装前提</h2><ol><li>Node.js (Node.js 版本需不低于 10.13，建议使用 Node.js 12.0 及以上版本)</li><li>Git<a id="more"></a><h3 id="查看是否安装成功Node-js与Git"><a href="#查看是否安装成功Node-js与Git" class="headerlink" title="查看是否安装成功Node.js与Git"></a>查看是否安装成功Node.js与Git</h3><pre class="line-numbers language-none"><code class="language-none">$ node -vv13.8.0$ git versiongit version 2.25.0<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li></ol><h3 id="Git安装（Mac系统）"><a href="#Git安装（Mac系统）" class="headerlink" title="Git安装（Mac系统）"></a>Git安装（Mac系统）</h3><h4 id="使用homebrew安装"><a href="#使用homebrew安装" class="headerlink" title="使用homebrew安装"></a>使用homebrew安装</h4><ol><li>安装homebrew <a href="https://brew.sh/">homebrew官网</a></li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">/bin/bash -c <span class="token string">"<span class="token variable"><span class="token variable">$(</span><span class="token function">curl</span> -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh<span class="token variable">)</span></span>"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol start="2"><li>使用homebrew安装git</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ brew <span class="token function">install</span> <span class="token function">git</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>Git安装依赖Xcode Command Line Tools，在安装时会默认安装该工具。如果出现报错，需要手动安装。</p></blockquote><h3 id="Node-js安装（Mac系统）"><a href="#Node-js安装（Mac系统）" class="headerlink" title="Node.js安装（Mac系统）"></a>Node.js安装（Mac系统）</h3><ol><li>使用homebrew安装</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ brew <span class="token function">install</span> <span class="token function">npm</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>如果下载速度较慢可以考虑使用<a href="https://npm.taobao.org/mirrors/node">淘宝Node.js镜像</a><br>如果homebrew下载过慢，可以参考修改brew修改下载源的方法。</p></blockquote><h3 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h3><h4 id="使用npm安装hexo"><a href="#使用npm安装hexo" class="headerlink" title="使用npm安装hexo"></a>使用npm安装hexo</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">npm</span> <span class="token function">install</span> -g hexo-cli<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="使用Hexo建站"><a href="#使用Hexo建站" class="headerlink" title="使用Hexo建站"></a>使用Hexo建站</h1><p>(1) 执行以下命令，Hexo会在指定文件夹中新建所需要的文件。(（该文件夹是未来放本地站点的位置，也是未来的github本地仓库）</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo init <span class="token operator">&lt;</span>folder<span class="token operator">></span>$ <span class="token builtin class-name">cd</span> <span class="token operator">&lt;</span>folder<span class="token operator">></span>$ <span class="token function">npm</span> <span class="token function">install</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>(2) 新建完成后，指定文件夹的目录如下：</p><pre class="line-numbers language-none"><code class="language-none">.├── _config.yml├── package.json├── scaffolds├── source|   ├── _drafts|   └── _posts└── themes<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>(3) 启动本地服务器，访问本地站点：<a href="http://localhost:4000/%EF%BC%8C%E5%8F%AF%E6%9F%A5%E7%9C%8B%E5%88%B0hexo%E9%BB%98%E8%AE%A4%E7%AB%99%E7%82%B9%E6%A0%B7%E5%BC%8F%E3%80%82">http://localhost:4000/，可查看到hexo默认站点样式。</a></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo generate$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h1 id="更改Hexo主题"><a href="#更改Hexo主题" class="headerlink" title="更改Hexo主题"></a>更改Hexo主题</h1><ol><li>找到主题的github地址。</li><li>cd到本地的themes文件夹，使用git clone命令进行本地复制。</li><li>修改项目config.yml文件关联主题。</li><li>hexo g生成，hexo s启动服务器并访问。</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">git</span> clone https://github.com/litten/hexo-theme-yilia<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none"># Extensions## Plugins: https:&#x2F;&#x2F;hexo.io&#x2F;plugins&#x2F;## Themes: https:&#x2F;&#x2F;hexo.io&#x2F;themes&#x2F;theme: hexo-theme-Annie<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>有些主题应用访问时，会出现乱排的情况。使用主题时，要读清楚作者的说明。有些需要一些插件，或者配置。<br>更多主题可以查看：<a href="https://hexo.io/themes/">更多主题</a></p></blockquote><h1 id="可能的问题"><a href="#可能的问题" class="headerlink" title="可能的问题"></a>可能的问题</h1><h2 id="更改npm的下载源"><a href="#更改npm的下载源" class="headerlink" title="更改npm的下载源"></a>更改npm的下载源</h2><blockquote><p>参考链接：<a href="https://www.runoob.com/w3cnote/npm-switch-repo.html">npm 切换镜像站点</a></p></blockquote><h2 id="下载hexo最新版本"><a href="#下载hexo最新版本" class="headerlink" title="下载hexo最新版本"></a>下载hexo最新版本</h2><h3 id="执行如下命令"><a href="#执行如下命令" class="headerlink" title="执行如下命令"></a>执行如下命令</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo@5<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="no-such-file-or-directory-open-‘-Users-anna-package-json’"><a href="#no-such-file-or-directory-open-‘-Users-anna-package-json’" class="headerlink" title="no such file or directory, open ‘/Users/anna/package.json’"></a>no such file or directory, open ‘/Users/anna/package.json’</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#执行如下代码行即可，再重新安装包</span><span class="token function">npm</span> init<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="npmWARN"><a href="#npmWARN" class="headerlink" title="npmWARN"></a>npmWARN</h3><p>npm安装模块的 npm WARN <a href="mailto:&#x72;&#x6f;&#111;&#x74;&#64;&#x31;&#46;&#48;&#x2e;&#x30;">&#x72;&#x6f;&#111;&#x74;&#64;&#x31;&#46;&#48;&#x2e;&#x30;</a> No description 和 npm WARN <a href="mailto:&#114;&#111;&#x6f;&#x74;&#64;&#x31;&#46;&#x30;&#x2e;&#48;">&#114;&#111;&#x6f;&#x74;&#64;&#x31;&#46;&#x30;&#x2e;&#48;</a> No repository filed </p><p>解决办法：修改根目录下的package.json文件</p><pre class="line-numbers language-json" data-language="json"><code class="language-json">'description'<span class="token operator">:</span> 'npm-install package''private' = <span class="token boolean">true</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://img-blog.csdnimg.cn/20200807164314974.png" alt="npm WARN"><br><img src="https://img-blog.csdnimg.cn/20200807163453649.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0paZXZpbg==,size_16,color_FFFFFF,t_70" alt="增加discription与private"></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;本地环境搭建&quot;&gt;&lt;a href=&quot;#本地环境搭建&quot; class=&quot;headerlink&quot; title=&quot;本地环境搭建&quot;&gt;&lt;/a&gt;本地环境搭建&lt;/h1&gt;&lt;p&gt;参考链接：&lt;br&gt;&lt;a href=&quot;https://hexo.io/zh-cn/docs/&quot;&gt;Hexo官方文档&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;安装前提&quot;&gt;&lt;a href=&quot;#安装前提&quot; class=&quot;headerlink&quot; title=&quot;安装前提&quot;&gt;&lt;/a&gt;安装前提&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;Node.js (Node.js 版本需不低于 10.13，建议使用 Node.js 12.0 及以上版本)&lt;/li&gt;
&lt;li&gt;Git</summary>
    
    
    
    <category term="hexo" scheme="https://etwinnie.github.io/categories/hexo/"/>
    
    
    <category term="hexo" scheme="https://etwinnie.github.io/tags/hexo/"/>
    
    <category term="blog" scheme="https://etwinnie.github.io/tags/blog/"/>
    
    <category term="环境搭建" scheme="https://etwinnie.github.io/tags/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    
    <category term="网站" scheme="https://etwinnie.github.io/tags/%E7%BD%91%E7%AB%99/"/>
    
  </entry>
  
  <entry>
    <title>成功访问了</title>
    <link href="https://etwinnie.github.io/2020/10/09/%E6%88%90%E5%8A%9F%E8%AE%BF%E9%97%AE%E4%BA%86%E3%80%82/"/>
    <id>https://etwinnie.github.io/2020/10/09/%E6%88%90%E5%8A%9F%E8%AE%BF%E9%97%AE%E4%BA%86%E3%80%82/</id>
    <published>2020-10-09T03:08:45.000Z</published>
    <updated>2020-10-12T09:40:32.266Z</updated>
    
    <content type="html"><![CDATA[<p>2020年10月<br>成功搭建雏形成功。<br>#这是一级标题</p><h2 id="这是二级标题"><a href="#这是二级标题" class="headerlink" title="这是二级标题"></a>这是二级标题</h2><h3 id="这是三级标题"><a href="#这是三级标题" class="headerlink" title="这是三级标题"></a>这是三级标题</h3><h4 id="再试一试四级标题"><a href="#再试一试四级标题" class="headerlink" title="再试一试四级标题"></a>再试一试四级标题</h4><p>这里是正文<br>试试看</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;2020年10月&lt;br&gt;成功搭建雏形成功。&lt;br&gt;#这是一级标题&lt;/p&gt;
&lt;h2 id=&quot;这是二级标题&quot;&gt;&lt;a href=&quot;#这是二级标题&quot; class=&quot;headerlink&quot; title=&quot;这是二级标题&quot;&gt;&lt;/a&gt;这是二级标题&lt;/h2&gt;&lt;h3 id=&quot;这是三级标题&quot;&gt;&lt;</summary>
      
    
    
    
    <category term="hexo" scheme="https://etwinnie.github.io/categories/hexo/"/>
    
    
    <category term="hexo" scheme="https://etwinnie.github.io/tags/hexo/"/>
    
    <category term="Travis IC" scheme="https://etwinnie.github.io/tags/Travis-IC/"/>
    
    <category term="blog" scheme="https://etwinnie.github.io/tags/blog/"/>
    
    <category term="demo" scheme="https://etwinnie.github.io/tags/demo/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://etwinnie.github.io/2020/10/05/hexo/hello-world/"/>
    <id>https://etwinnie.github.io/2020/10/05/hexo/hello-world/</id>
    <published>2020-10-05T08:09:18.000Z</published>
    <updated>2020-10-12T05:32:42.536Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
